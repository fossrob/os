name: build-os

on:
  push:
    branches:
      - 'main'
    paths-ignore:
      - '**.md'
      - '**.txt'
  schedule:
    - cron: '20 23 * * *'  # 23h20 UTC
  workflow_dispatch:  # allows you to run this workflow manually from the actions tab

env:
    IMAGE_NAME: os
    IMAGE_REGISTRY: ghcr.io/${{ github.repository_owner }}
    UPSTREAM: quay.io/fedora-ostree-desktops/silverblue

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write
    strategy:
      fail-fast: false
      matrix:
        # image_name: [os, os-ux, os-dx]
        # image_flavor: [main, nvidia]
        # fedora_version: [37, 38]
        include:
          - image_name: os-ux
            image_flavor: main
            fedora_version: 38
            is_latest_version: true
            is_stable_version: true
          - image_name: os-dx
            image_flavor: nvidia
            fedora_version: 38
            is_latest_version: true
            is_stable_version: true
          - image_name: os-dx
            image_flavor: nvidia
            fedora_version: 37
            is_latest_version: false
            is_stable_version: false

    steps:
      - uses: actions/checkout@v3

      - name: Matrix Variables
        id: matrix-variables
        run: |
          if [[ "${{ matrix.image_flavor }}" == "main" ]]; then
              echo "IMAGE_NAME=${{ matrix.image_name }}" >> $GITHUB_ENV
          else
              echo "IMAGE_NAME=${{ format('{0}-{1}', matrix.image_name, matrix.image_flavor) }}" >> $GITHUB_ENV
              echo "UPSTREAM=ghcr.io/ublue-os/silverblue-nvidia" >> $GITHUB_ENV
          fi

      - name: Generate Tags
        id: generate-tags
        run: |
          BUILD_TAGS=()
          FEDORA_VERSION="${{ matrix.fedora_version }}"
          TIMESTAMP="$(date +%Y%m%d)"

          BUILD_TAGS=("${FEDORA_VERSION}" "${FEDORA_VERSION}-${TIMESTAMP}")

          if [[ "${{ matrix.is_latest_version }}" == "true" ]] && [[ "${{ matrix.is_stable_version }}" == "true" ]]; then
            BUILD_TAGS+=("latest")
          fi

          echo "Generated the following build tags: "
          for TAG in "${BUILD_TAGS[@]}"; do
            echo "${TAG}"
          done

          alias_tags=("${BUILD_TAGS[@]}")
          echo "alias_tags=${alias_tags[*]}" >> $GITHUB_OUTPUT

      - name: Image Build
        id: image-build
        uses: redhat-actions/buildah-build@v2
        with:
          containerfiles: Containerfile
          image: ${{ env.IMAGE_NAME }}
          tags: ${{ steps.generate-tags.outputs.alias_tags }}
          # IMAGE_NAME=${{ matrix.image_name }}
          # IMAGE_FLAVOR=${{ matrix.image_flavor }}
          build-args: |
            FEDORA_VERSION=${{ matrix.fedora_version }}
            UPSTREAM=${{ env.UPSTREAM }}
          oci: false
          extra-args: --target=${{ matrix.image_name }}

      - name: Push To Registry
        id: registry-push
        uses: redhat-actions/push-to-registry@v2
        env:
          REGISTRY_URL: ghcr.io/${{ github.repository_owner }}
          REGISTRY_USER: ${{ github.actor }}
          REGISTRY_PASSWORD: ${{ github.token }}
        with:
          # Name of the image/manifest to push (e.g. username/imagename or imagename)
          image: ${{ steps.image-build.outputs.image }}
          # 'The tag or tags of the image/manifest to push. For multiple tags, seperate by whitespace. For example, "latest v1"'
          tags: ${{ steps.image-build.outputs.tags }}
          # Hostname and optional namespace to push the image to (eg. quay.io/username or quay.io)
          registry: ${{ env.REGISTRY_URL }}
          # Username to use as credential to authenticate to the registry
          username: ${{ env.REGISTRY_USER }}
          # Password to use as credential to authenticate to the registry
          password: ${{ env.REGISTRY_PASSWORD }}
          # Extra args to be passed to podman push. Separate arguments by newline. Do not use quotes - @actions/exec will do the quoting for you.
          extra-args: |
            --disable-content-trust
