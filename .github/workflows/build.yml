name: build-os

on:
  push:
    branches:
      - 'main'
    paths-ignore:
      - 'LICENSE'
      - '**.md'
      - '**.txt'
  schedule:
    - cron: '30 8 * * *'  # 08h30 UTC (+0.5h after ublue-os main and nvidia)
  workflow_dispatch:  # allows you to run this workflow manually from the actions tab

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    strategy:
      fail-fast: false
      matrix:
        base: [os, dx]
        flavor: [main, nvidia]
        version: [38, 39]
        exclude:
          - base: os
            flavor: nvidia
          - base: dx
            version: 39
          - flavor: nvidia
            version: 39
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Log in to registry
        uses: redhat-actions/podman-login@v1
        with:
          username: ${{ github.actor }}
          password: ${{ github.token }}
          registry: ghcr.io/${{ github.repository_owner }}

      - name: Generate variables
        id: variables
        run: |
          echo "datestamp=$(date +%Y%m%d)" >> $GITHUB_OUTPUT
          if [[ "${{ matrix.flavor }}" == "main" ]]; then
              echo "image-name=${{ matrix.base }}" >> $GITHUB_OUTPUT
          else
              echo "image-name=${{ format('{0}-{1}', matrix.base, matrix.flavor) }}" >> $GITHUB_OUTPUT
          fi
          if [[ ${{ matrix.version }} -eq 38 ]]; then
            echo "containerfile=Containerfile.${{ matrix.base }}" >> $GITHUB_OUTPUT
            echo "source-image=ghcr.io/ublue-os/silverblue-${{ matrix.flavor }}:${{ matrix.version }}" >> $GITHUB_OUTPUT
          else
            echo "containerfile=Containerfile.39" >> $GITHUB_OUTPUT
            echo "source-image=quay.io/fedora/fedora-silverblue:${{ matrix.version }}" >> $GITHUB_OUTPUT
          fi

      - name: Build image
        id: image
        uses: redhat-actions/buildah-build@v2
        with:
          containerfiles: |
            ${{ steps.variables.outputs.containerfile }}
          image: ${{ steps.variables.outputs.image-name }}
          tags: ${{ matrix.version }} ${{ matrix.version }}-${{ steps.variables.outputs.datestamp }}
          build-args: |
            SOURCE_IMAGE=${{ steps.variables.outputs.source-image }}
          oci: false
          layers: true

      - name: Push to registry
        uses: redhat-actions/push-to-registry@v2
        with:
          registry: ghcr.io/${{ github.repository_owner }}
          image: ${{ steps.image.outputs.image }}
          tags: ${{ steps.image.outputs.tags }}
          extra-args: |
            --disable-content-trust
